// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.240405.15

#pragma once
#ifndef WINRT_Windows_AI_Agents_Mcp_1_H
#define WINRT_Windows_AI_Agents_Mcp_1_H
#include "winrt/impl/Windows.AI.Agents.Mcp.0.h"
WINRT_EXPORT namespace winrt::Windows::AI::Agents::Mcp
{
    struct WINRT_IMPL_EMPTY_BASES IMcpHttpConnectionResult :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMcpHttpConnectionResult>
    {
        IMcpHttpConnectionResult(std::nullptr_t = nullptr) noexcept {}
        IMcpHttpConnectionResult(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IMcpNamedPipeConnectionResult :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMcpNamedPipeConnectionResult>
    {
        IMcpNamedPipeConnectionResult(std::nullptr_t = nullptr) noexcept {}
        IMcpNamedPipeConnectionResult(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IMcpNamedPipeConnectionServer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMcpNamedPipeConnectionServer>
    {
        IMcpNamedPipeConnectionServer(std::nullptr_t = nullptr) noexcept {}
        IMcpNamedPipeConnectionServer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IMcpServerRegistry :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMcpServerRegistry>
    {
        IMcpServerRegistry(std::nullptr_t = nullptr) noexcept {}
        IMcpServerRegistry(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IMcpServerRegistryStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMcpServerRegistryStatics>
    {
        IMcpServerRegistryStatics(std::nullptr_t = nullptr) noexcept {}
        IMcpServerRegistryStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IMcpSseConnectionServer :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMcpSseConnectionServer>
    {
        IMcpSseConnectionServer(std::nullptr_t = nullptr) noexcept {}
        IMcpSseConnectionServer(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IMcpStdioConnectionInfo :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMcpStdioConnectionInfo>
    {
        IMcpStdioConnectionInfo(std::nullptr_t = nullptr) noexcept {}
        IMcpStdioConnectionInfo(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
}
#endif
